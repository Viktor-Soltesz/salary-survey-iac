version: 2

models:
  - name: int_survey_data__outliers_flagged
    description: >
      Flags outlier survey responses using a robust z-score method based on the modified z-score formula.
      Uses the median and median absolute deviation (MAD) to compute a robust outlier indicator.
    columns:
      - name: survey_entry_id
        description: "{{ doc('survey_entry_id') }}"

      - name: entry_number
        description: "{{ doc('entry_number') }}"
        tests:
          - not_null
          - unique

      - name: year
        description: "{{ doc('year') }}"

      - name: seniority_level
        description: "{{ doc('seniority_level') }}"

      - name: employment_status
        description: "{{ doc('employment_status') }}"

      - name: salary
        description: "{{ doc('salary') }}"
        tests:
          - not_null

      - name: country
        description: "{{ doc('country') }}"
        tests:
          - not_null

      - name: company_size
        description: "{{ doc('company_size') }}"

      - name: job_category
        description: "{{ doc('job_category') }}"

      - name: country_name
        description: "{{ doc('country_name') }}"

      - name: gdp_ppp
        description: "{{ doc('gdp_ppp') }}"
        tests:
          - not_null

      - name: factor_to_2024
        description: "{{ doc('factor_to_2024') }}"
        tests:
          - not_null

      - name: salary_norm2024
        description: "{{ doc('salary_norm2024') }}"
        tests:
          - not_null

      - name: salary_normgdp
        description: "{{ doc('salary_normgdp') }}"
        tests:
          - not_null

      - name: salary_norm
        description: "{{ doc('salary_norm') }}"
        tests:
          - not_null

      - name: z_score_modif
        description: "{{ doc('z_score_modif') }}"
        tests:
          - not_null

      - name: is_outlier
        description: Boolean flag indicating whether the entry is considered an outlier (TRUE if modified z-score > 3.5).
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "IN (TRUE, FALSE)"