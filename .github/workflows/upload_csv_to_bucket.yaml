name: Upload CSV to GCS

on:
  push:
    paths:
      - 'data/**'
      - '.github/workflows/upload_csv_to_bucket.yaml'
  workflow_dispatch:
  #schedule:
  #  - cron: '0 5 * * 1'  # Every Monday at 5:00 AM UTC

jobs:
  validate-csv:
    if: true  # MANUAL enabling/disabling of the job
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Validate CSV format
        run: |
          shopt -s nullglob
          files=(data/*.csv)
          if [ ${#files[@]} -eq 0 ]; then
            echo "No CSV files found in data/ folder!" && exit 1
          fi

          echo "Validating CSV files..."
          for file in "${files[@]}"; do
            echo "Checking $file"
            header=$(head -n 1 "$file")
            echo "$header" | grep -q "salary" || {
              echo "Invalid CSV header in $file. Missing expected column." && exit 1
            }
          done
          echo "All CSV files passed validation."

  upload-csv:
    needs: validate-csv
    if: true  # MANUAL enabling/disabling of the job
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    env:
      GCP_PROJECT_ID: ${{ vars.PROJECT_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache gcloud CLI config/plugins
        uses: actions/cache@v3
        with:
          path: ~/.config/gcloud
          key: ${{ runner.os }}-gcloud-${{ hashFiles('.github/workflows/upload_csv_to_bucket.yaml') }}
          restore-keys: |
            ${{ runner.os }}-gcloud-

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Install gcloud CLI (includes gsutil)
        uses: google-github-actions/setup-gcloud@6189d56e4096ee891640bb02ac264be376592d6a
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Upload CSV to GCS upload bucket
        run: |
          BUCKET_NAME="${GCP_PROJECT_ID}-upload"
          TARGET_PATH="surveys/developer_salaries/"
          echo "Uploading CSV to: gs://${BUCKET_NAME}/${TARGET_PATH}"
          gsutil cp data/*.csv gs://${BUCKET_NAME}/${TARGET_PATH}

  notify-slack-success:
    needs: upload-csv
    if: success()
    runs-on: ubuntu-latest

    steps:
      - name: Notify Slack of successful upload
        uses: rtCamp/action-slack-notify@e31e87e03dd19038e411e38ae27cbad084a90661
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: 'GitHub Actions Bot'
          SLACK_COLOR: '#36a64f'  # green
          SLACK_MESSAGE: |
            ✅ *CSV Upload Workflow Succeeded*
            • Repo: `${{ github.repository }}`
            • Branch: `${{ github.ref_name }}`
            • Actor: `${{ github.actor }}`
            • Workflow: `${{ github.workflow }}`
            • Run: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View logs>

  notify-slack-failure:
    needs: [validate-csv, upload-csv]
    if: failure()
    runs-on: ubuntu-latest

    steps:
      - name: Notify Slack of failed upload
        uses: rtCamp/action-slack-notify@e31e87e03dd19038e411e38ae27cbad084a90661
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: 'GitHub Actions Bot'
          SLACK_COLOR: '#FF0000'  # red
          SLACK_MESSAGE: |
            ❌ *CSV Upload Workflow Failed*
            • Repo: `${{ github.repository }}`
            • Branch: `${{ github.ref_name }}`
            • Actor: `${{ github.actor }}`
            • Workflow: `${{ github.workflow }}`
            • Run: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View logs>
