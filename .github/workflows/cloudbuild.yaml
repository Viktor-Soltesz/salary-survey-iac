name: Deploy Infrastructure

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      TF_VAR_project_id: "software-developer-salaries"
      REGION: "europe-west9"

    steps:
      # 1. Check out the code.
      - name: Check out repository
        uses: actions/checkout@v3

      # 2. Install zip & Zip code.
      - name: Install zip & Zip code
        run: |
          sudo apt-get update
          sudo apt-get install zip -y
          # Zip into infra/ directory
          zip ../infra/function-source.zip main.py requirements.txt
          # Debug: Verify file location
          ls -la ../infra/
        working-directory: code

      # 3. Set up Terraform.
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.9
      
      # 4. Authenticate with Google Cloud.
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      # 5. Initialize Terraform.
      - name: Terraform Init
        run: |
          terraform init \
            -reconfigure \
            -backend-config="bucket=software-developer-salaries-tf-state" \
            -backend-config="prefix=data-analytics-platform-event-driven"
        working-directory: infra

      # 5.2. Debug BigQuery access.
      - name: Debug BigQuery Access
        run: |
          echo "Project ID: $TF_VAR_project_id"
          echo "Region: $TF_VAR_region"
          bq ls --project_id=$TF_VAR_project_id
          bq show --format=prettyjson $TF_VAR_project_id:ecommerce
        working-directory: infra
        
      # 6. Import existing resources with conditional BigQuery check.
      - name: Import Existing Resources
        run: |
          # Check if BigQuery dataset exists before importing
          if bq ls --project_id=software-developer-salaries | grep -q "ecommerce"; then
            echo "Dataset ecommerce exists, importing..."
            terraform import google_bigquery_dataset.ecommerce software-developer-salaries.ecommerce
          else
            echo "Dataset ecommerce does not exist, will be created by Terraform."
          fi
          # Import service account
          terraform import google_service_account.function_sa projects/software-developer-salaries/serviceAccounts/gcs-to-bq-trigger@software-developer-salaries.iam.gserviceaccount.com || true
          # Import storage buckets
          terraform import google_storage_bucket.gcf_source_bucket software-developer-salaries-gcf-source-bucket || true
          terraform import google_storage_bucket.upload_bucket software-developer-salaries-upload || true
          terraform import google_storage_bucket.archive_bucket software-developer-salaries-archive || true
        working-directory: infra

      # 7. Verify Terraform state after imports.
      - name: Verify Terraform State
        run: terraform state list
        working-directory: infra

      # 8. Generate and inspect Terraform plan.
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: infra

      # 9. Apply Terraform changes.
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: infra