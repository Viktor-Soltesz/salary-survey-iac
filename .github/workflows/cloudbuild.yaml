name: Deploy Infrastructure

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # Set your environment variables here.  
    env:
      TF_VAR_project_id: "software-developer-salaries"
      REGION: "europe-west9"

    steps:
      # 1. Check out the code.
      - name: Check out repository
        uses: actions/checkout@v3

      # 2. Install zip & zip your Cloud Function code.
      - name: Install zip & Zip code
        run: |
          sudo apt-get update
          sudo apt-get install zip -y
          # Zip everything into function-source.zip right here in the code folder
          zip function-source.zip main.py requirements.txt
        working-directory: code

      # 3. Set up Terraform (installs the CLI).
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.9
      
      # 4. Authenticate with Google Cloud before using Terraform
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      # 5. Initialize Terraform (backend config for remote state).
      - name: Terraform Init
        run: |
          terraform init \
            -reconfigure \
            -backend-config="bucket=software-developer-salaries-tf-state" \
            -backend-config="prefix=data-analytics-platform-event-driven"
        working-directory: infra
        
      # 6. Import existing resources
      - name: Import Existing Resources
        run: |
          # Try to import resources, ignoring errors if they don't exist
          terraform import google_bigquery_dataset.ecommerce software-developer-salaries:ecommerce || true
          terraform import google_service_account.function_sa projects/software-developer-salaries/serviceAccounts/gcs-to-bq-trigger@software-developer-salaries.iam.gserviceaccount.com || true
          
          # You'll need to figure out the actual bucket names - these are likely in the form:
          # project-id-gcf-source, project-id-upload, project-id-archive
          # Check in GCP console or modify these based on your error messages
          terraform import google_storage_bucket.gcf_source_bucket software-developer-salaries-gcf-source || true
          terraform import google_storage_bucket.upload_bucket software-developer-salaries-upload-bucket || true
          terraform import google_storage_bucket.archive_bucket software-developer-salaries-archive-bucket || true
        working-directory: infra

      # 7. Apply Terraform changes.
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: infra